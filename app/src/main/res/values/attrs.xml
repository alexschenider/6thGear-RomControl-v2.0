<?xml version="1.0" encoding="utf-8"?>
<!--/*      Created by Roberto Mariani and Anna Berkovitch, 2015-2016
        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program.  If not, see <http://www.gnu.org/licenses/>.*/-->
<resources>
    <attr name="navDrawerColorSelector" format="color|reference"/>
    <declare-styleable name="ThumbnailListPreference">
        <attr name="drawableArray" format="reference"/>
        <attr name="entryList" format="reference"/>
        <attr name="entryValuesList" format="reference"/>
    </declare-styleable>
    <declare-styleable name="MyMultiSelectPreference">
        <attr name="multiEntryList" format="reference"/>
        <attr name="multiValuesList" format="reference"/>
    </declare-styleable>
    <declare-styleable name="GlobalRestorePreference">
        <attr name="titlesList" format="reference"/>
        <attr name="keysList" format="reference"/>
        <attr name="valuesList" format="reference"/>
    </declare-styleable>
    <declare-styleable name="Preference">
        <attr name="packageNameToKill" format="string"/>
        <attr name="isSilent" format="boolean"/>
        <attr name="rebootDevice" format="boolean"/>
        <attr name="dependentValue" format="string"/>
        <attr name="reverseDependency" format="string"/>
    </declare-styleable>
    <declare-styleable name="MySeekBarPreference">
        <attr name="minValue" format="integer"/>
        <attr name="maxValue" format="integer" />
        <attr name="unitsValue" format="string"/>
    </declare-styleable>
    <declare-styleable name="OpenAppPreference">
        <attr name="componentName" format="string"/>
    </declare-styleable>
    <declare-styleable name="ImageHeaderPreference">
        <attr name="imageSource" format="reference"/>
    </declare-styleable>
    <declare-styleable name="RunScriptPreference">
        <attr name="scriptFileName" format="string"/>
        <attr name="showConfirmDialog" format="boolean"/>
        <attr name="rebootOptions">
            <enum name="none" value="0"/>
            <enum name="optional" value="1"/>
            <enum name="imminent" value="2"/>
        </attr>
    </declare-styleable>
    <declare-styleable name="IntentDialogPreference">
        <attr name="intentSeparator" format="string"/>
        <attr name="showSearch" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="RebootView">
        <attr name="rebootText" format="string"/>
        <attr name="rebootColor" format="color"/>
    </declare-styleable>
    <declare-styleable name="MultipleChoicePreference">
        <attr name="multipleChoiceTitles" format="reference"/>
        <attr name="multipleChoiceKeys" format="reference"/>
        <attr name="multipleChoiceSummaries" format="reference"/>
        <attr name="multipleChoiceDefaults" format="reference"/>
        <attr name="showSelectAll" format="boolean"/>
        <attr name="choiceSelector">
            <enum name="checkbox_selector" value="0"/>
            <enum name="switch_selector" value="1"/>
        </attr>
    </declare-styleable>

    <!-- fake -->
    <declare-styleable name="KeyButtonView">
        <!-- key code to send when pressed; if absent or 0, no key is sent -->
        <attr name="keyCode" format="integer" />
        <!-- does this button generate longpress / repeat events? -->
        <attr name="keyRepeat" format="boolean" />
        <!-- Should this button play sound effects, default true -->
        <attr name="playSound" format="boolean" />
        <attr name="android:contentDescription" />
    </declare-styleable>
    <declare-styleable name="ToggleSliderView">
        <attr name="text" format="string" />
    </declare-styleable>
    <declare-styleable name="NotificationLinearLayout">
        <attr name="insetLeft" format="dimension" />
    </declare-styleable>
    <declare-styleable name="RecentsPanelView">
        <attr name="recentItemLayout" format="reference" />
        <!-- Style for the "Clear all" button. -->
        <attr name="clearAllStyle" format="reference" />
        <attr name="clearAllBackgroundColor" format="reference" />
    </declare-styleable>
    <declare-styleable name="DeadZone">
        <attr name="minSize" format="dimension" />
        <attr name="maxSize" format="dimension" />
        <attr name="holdTime" format="integer" />
        <attr name="decayTime" format="integer" />
        <attr name="orientation" />
    </declare-styleable>
    <attr name="frameColor" format="color" />
    <declare-styleable name="BatteryMeterView">
        <attr name="frameColor" />
    </declare-styleable>
    <declare-styleable name="Clock">
        <attr name="amPmStyle" format="enum">
            <enum name="normal" value="0" />
            <enum name="small" value="1" />
            <enum name="gone" value="2" />
        </attr>
        <attr name="showDark" format="boolean" />
    </declare-styleable>
    <attr name="orientation">
        <enum name="horizontal" value="0" />
        <enum name="vertical" value="1" />
    </attr>
    <declare-styleable name="UserAvatarView">
        <attr name="avatarPadding" format="dimension" />
        <attr name="frameWidth" format="dimension" />
        <attr name="framePadding" format="dimension" />
        <!-- {@deprecated Use a statelist in frameColor instead.} -->
        <attr name="activeFrameColor" format="color" />
        <attr name="frameColor" />
        <attr name="badgeDiameter" format="dimension" />
        <attr name="badgeMargin" format="dimension" />
    </declare-styleable>
    <declare-styleable name="UserDetailItemView">
        <attr name="regularFontFamily" format="string" />
        <attr name="activatedFontFamily" format="string" />
    </declare-styleable>
    <declare-styleable name="DateView">
        <attr name="datePattern" format="string" />
    </declare-styleable>
    <declare-styleable name="PseudoGridView">
        <attr name="numColumns" format="integer" />
        <attr name="verticalSpacing" format="dimension" />
        <attr name="horizontalSpacing" format="dimension" />
    </declare-styleable>

    <!-- Theme for icons in the status bar (light/dark). background/fillColor is used for dual tone
         icons like wifi and signal, and singleToneColor is used for icons with only one tone.
         Contract: Pixel with fillColor blended over backgroundColor blended over translucent should
         equal to singleToneColor blended over translucent. -->
    <declare-styleable name="TonedIcon">
        <attr name="backgroundColor" format="integer" />
        <attr name="fillColor" format="integer" />
        <attr name="singleToneColor" format="integer" />
    </declare-styleable>

    <declare-styleable name="StatusBarWindowView_Layout">
        <attr name="ignoreRightInset" format="boolean" />
    </declare-styleable>

    <declare-styleable name="AnimatedImageView">
        <attr name="hasOverlappingRendering" format="boolean" />
    </declare-styleable>

    <declare-styleable name="TunerSwitch">
        <attr name="defValue" format="boolean" />
        <attr name="metricsAction" format="integer" />
    </declare-styleable>

    <declare-styleable name="AutoReinflateContainer">
        <attr name="android:layout" />
    </declare-styleable>

    <declare-styleable name="HybridNotificationTheme">
        <attr name="hybridNotificationStyle" format="reference" />
        <attr name="hybridNotificationTitleStyle" format="reference" />
        <attr name="hybridNotificationTextStyle" format="reference" />
    </declare-styleable>

    <declare-styleable name="AutoSizingList">
        <!-- Whether AutoSizingList will show only as many items as fit on screen and
             remove extra items instead of scrolling. -->
        <attr name="enableAutoSizing" format="boolean" />
        <attr name="itemHeight" format="dimension" />
    </declare-styleable>

    <declare-styleable name="PluginInflateContainer">
        <attr name="viewType" format="string" />
    </declare-styleable>

    <attr name="lightIconTheme" format="reference" />
    <attr name="darkIconTheme" format="reference" />
    <attr name="wallpaperTextColor" format="reference|color" />
    <attr name="wallpaperTextColorSecondary" format="reference|color" />

</resources>